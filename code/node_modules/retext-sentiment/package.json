{
  "name": "retext-sentiment",
  "version": "1.0.0",
  "description": "Detect the sentiment of text with Retext",
  "license": "MIT",
  "keywords": [
    "natural",
    "language",
    "afinn",
    "sentiment",
    "subjective",
    "subjectivity",
    "polarity",
    "opinion",
    "emotion",
    "attitude",
    "sentiment",
    "detect",
    "guess",
    "retext"
  ],
  "dependencies": {
    "nlcst-to-string": "^0.1.5",
    "unist-util-visit": "^1.0.0"
  },
  "files": [
    "data/data.json",
    "index.js"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/wooorm/retext-sentiment.git"
  },
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com"
  },
  "devDependencies": {
    "afinn-111": "^0.1.5",
    "browserify": "^11.0.1",
    "chalk": "^1.0.0",
    "emoji-emotion": "^0.1.1",
    "emoticon": "^0.1.0",
    "eslint": "^1.0.0",
    "esmangle": "^1.0.1",
    "gemoji": "^0.2.2",
    "istanbul": "^0.3.0",
    "jscs": "^2.0.0",
    "jscs-jsdoc": "^1.0.0",
    "mdast": "^0.28.0",
    "mdast-comment-config": "^0.1.2",
    "mdast-github": "^0.3.2",
    "mdast-lint": "^0.4.2",
    "mdast-slug": "^0.1.1",
    "mdast-validate-links": "^0.3.1",
    "mocha": "^2.0.0",
    "retext": "^1.0.0-rc.2"
  },
  "scripts": {
    "test-api": "mocha --check-leaks test.js",
    "test-coverage": "istanbul cover _mocha -- test.js",
    "test-travis": "npm run test-coverage",
    "test": "npm run test-api",
    "lint-api": "eslint .",
    "lint-style": "jscs --reporter inline .",
    "lint": "npm run lint-api && npm run lint-style",
    "make": "npm run lint && npm run test-coverage",
    "build-list": "node script/build-list.js",
    "build-bundle": "browserify index.js --ignore-missing --no-builtins --standalone retextPOS > retext-sentiment.js",
    "postbuild-bundle": "esmangle retext-sentiment.js > retext-sentiment.min.js",
    "build-md": "mdast . --quiet",
    "build": "npm run build-list && npm run build-bundle && npm run build-md"
  },
  "readme": "# retext-sentiment [![Build Status](https://img.shields.io/travis/wooorm/retext-sentiment.svg)](https://travis-ci.org/wooorm/retext-sentiment) [![Coverage Status](https://img.shields.io/codecov/c/github/wooorm/retext-sentiment.svg)](https://codecov.io/github/wooorm/retext-sentiment)\n\nSentiment detection with [**Retext**](https://github.com/wooorm/retext).\n\n## Installation\n\n[npm](https://docs.npmjs.com/cli/install):\n\n```bash\nnpm install retext-sentiment\n```\n\n**retext-sentiment** is also available for [bower](http://bower.io/#install-packages),\n[component](https://github.com/componentjs/component), and\n[duo](http://duojs.org/#getting-started), and as an AMD, CommonJS, and globals\nmodule, [uncompressed](retext-sentiment.js) and\n[compressed](retext-sentiment.min.js).\n\n## Usage\n\n```javascript\nvar retext = require('retext');\nvar inspect = require('unist-util-inspect');\nvar sentiment = require('retext-sentiment');\n\nretext().use(sentiment).use(function () {\n    return function (cst) {\n        console.log(inspect(cst));\n    };\n}).process(\n    'I hate forgetting to bring a book somewhere I ' +\n    'definitely should have brought a book to. ' +\n    /*\n     * Note that `bad` is a negative word, but that it's\n     * classified as positive due to its preceding `not`\n     * on parent (sentence, paragraph, root) level.\n     */\n    'This product is not bad at all. ' +\n    /*\n     * Emoji.\n     */\n    'Hai sexy! \\ud83d\\ude0f'\n);\n```\n\nYields:\n\n```text\nRootNode[1] [data={\"polarity\":6,\"valence\":\"positive\"}]\n└─ ParagraphNode[5] [data={\"polarity\":6,\"valence\":\"positive\"}]\n   ├─ SentenceNode[32] [data={\"polarity\":-3,\"valence\":\"negative\"}]\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'I'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1] [data={\"polarity\":-3,\"valence\":\"negative\"}]\n   │  │  └─ TextNode: 'hate' [data={\"polarity\":-3,\"valence\":\"negative\"}]\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'forgetting'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'to'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'bring'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'a'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'book'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'somewhere'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'I'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'definitely'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'should'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'have'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'brought'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'a'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'book'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'to'\n   │  └─ PunctuationNode: '.'\n   ├─ WhiteSpaceNode: ' '\n   ├─ SentenceNode[14] [data={\"polarity\":3,\"valence\":\"positive\"}]\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'This'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'product'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'is'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'not'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1] [data={\"polarity\":-3,\"valence\":\"negative\"}]\n   │  │  └─ TextNode: 'bad' [data={\"polarity\":-3,\"valence\":\"negative\"}]\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'at'\n   │  ├─ WhiteSpaceNode: ' '\n   │  ├─ WordNode[1]\n   │  │  └─ TextNode: 'all'\n   │  └─ PunctuationNode: '.'\n   ├─ WhiteSpaceNode: ' '\n   └─ SentenceNode[6] [data={\"polarity\":6,\"valence\":\"positive\"}]\n      ├─ WordNode[1]\n      │  └─ TextNode: 'Hai'\n      ├─ WhiteSpaceNode: ' '\n      ├─ WordNode[1] [data={\"polarity\":3,\"valence\":\"positive\"}]\n      │  └─ TextNode: 'sexy' [data={\"polarity\":3,\"valence\":\"positive\"}]\n      ├─ PunctuationNode: '!'\n      ├─ WhiteSpaceNode: ' '\n      └─ SymbolNode: '😏' [data={\"polarity\":3,\"valence\":\"positive\"}]\n```\n\n## API\n\n### [retext](https://github.com/wooorm/retext#api)\\.[use](https://github.com/wooorm/retext#retextuseplugin-options)([sentiment](#api)\\[, options\\])\n\n```javascript\nretext().use(sentiment, {\n    'cat': -3,\n    'dog': 3\n});\n```\n\n**retext-sentiment** automatically detects the sentiment of each [`Text`](https://github.com/wooorm/nlcst#text)/[`WordNode`](https://github.com/wooorm/nlcst#wordnode) (using [**wooorm/afinn-111**](https://github.com/wooorm/afinn-111) and [**wooorm/emoji-emotion**](https://github.com/wooorm/emoji-emotion)), and\nstores the valence in `node.data.valence`, and polarity in `node.data.polarity`.\n\nValence? Either `\"neutral\"`, `\"positive\"`, or `\"negative\"`. Polarity? A number\nbetween `-5` and `5` (both including).\n\nIn addition, the plugin exposes a calculated sentiment on parents (sentences,\nparagraphs, and root nodes), through the same `valence` and `polarity`\nproperties.\nThis calculated sentiment includes negation, so a word such as `bad`, with a\npolarity of `-3`, is calculated as `3` when preceded by a word such as `not`,\n`neither`, `nor`, or a word ending in `n't`.\n\n**Parameters**:\n\n*   `sentiment` — This module;\n\n*   `inject` (`Object`, optional) — Mapping strings (words, other symbols)\n    to numbers. Used to insert custom values, or overwrite existing values with\n    new weights.\n\n## Supported Words\n\n**retext-sentiment** supports all [**wooorm/afinn-111**](https://github.com/wooorm/afinn-111#supported-words)\nwords and [**wooorm/emoji-emotion**](https://github.com/wooorm/emoji-emotion#supported-emoji)\nemoji/gemoji.\n\n## License\n\n[MIT](LICENSE) © [Titus Wormer](http://wooorm.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/wooorm/retext-sentiment/issues"
  },
  "_id": "retext-sentiment@1.0.0",
  "_from": "retext-sentiment@"
}
