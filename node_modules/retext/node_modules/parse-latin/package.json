{
  "name": "parse-latin",
  "version": "3.0.0",
  "description": "Latin-script (natural language) parser",
  "license": "MIT",
  "keywords": [
    "nlcst",
    "latin",
    "script",
    "natural",
    "language",
    "parser"
  ],
  "dependencies": {
    "array-iterate": "^1.0.0",
    "nlcst-to-string": "^1.0.0",
    "unist-util-modify-children": "^1.0.0",
    "unist-util-visit-children": "^1.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/wooorm/parse-latin.git"
  },
  "bugs": {
    "url": "https://github.com/wooorm/parse-latin/issues"
  },
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "devDependencies": {
    "browserify": "^13.0.0",
    "chalk": "^1.0.0",
    "eslint": "^1.0.0",
    "esmangle": "^1.0.0",
    "istanbul": "^0.4.0",
    "jscs": "^2.0.0",
    "jscs-jsdoc": "^1.0.0",
    "mocha": "^2.0.0",
    "nlcst-test": "^0.2.0",
    "regenerate": "^1.0.0",
    "remark": "^3.0.0",
    "remark-comment-config": "^2.0.0",
    "remark-github": "^4.0.0",
    "remark-lint": "^2.0.0",
    "remark-slug": "^4.0.0",
    "remark-usage": "^2.1.0",
    "remark-validate-links": "^2.0.0",
    "unicode-8.0.0": "^0.1.0",
    "unist-util-inspect": "^2.0.0",
    "vfile": "^1.1.0"
  },
  "scripts": {
    "fixture": "node script/generate-fixture",
    "build-md": "remark . --quiet --frail",
    "build-expressions": "node script/build-expressions",
    "build-bundle": "browserify index.js -s ParseLatin > parse-latin.js",
    "build-mangle": "esmangle parse-latin.js > parse-latin.min.js",
    "build": "npm run build-md && npm run build-expressions && npm run build-bundle && npm run build-mangle",
    "lint-api": "eslint .",
    "lint-style": "jscs --reporter inline .",
    "lint": "npm run lint-api && npm run lint-style",
    "test-api": "mocha --check-leaks test/index.js",
    "test-coverage": "istanbul cover _mocha -- test/index.js",
    "test": "npm run build && npm run lint && npm run test-coverage"
  },
  "readme": "# parse-latin [![Build Status][travis-badge]][travis] [![Coverage Status][coverage-badge]][coverage]\n\nA Latin script language parser for [retext][] producing [NLCST][] nodes.\n\nWhether Old-English (“þā gewearþ þǣm hlāforde and þǣm hȳrigmannum wiþ ānum\npenninge”), Icelandic (“Hvað er að frétta”), French (“Où sont les toilettes?”),\n**parse-latin** does a good job at tokenizing it.\n\nNote also that **parse-latin** does a decent job at tokenizing Latin-like\nscripts, Cyrillic (“Добро пожаловать!”), Georgian (“როგორა ხარ?”), Armenian\n(“Շատ հաճելի է”), and such.\n\n## Installation\n\n[npm][npm-install]:\n\n```bash\nnpm install parse-latin\n```\n\n**parse-latin** is also available for [duo][], and as an AMD, CommonJS,\nand globals module, [uncompressed and compressed][releases].\n\n## Usage\n\nDependencies:\n\n```javascript\nvar inspect = require('unist-util-inspect');\nvar ParseLatin = require('parse-latin');\nvar latin = new ParseLatin();\n```\n\nInvoking `parse`:\n\n```javascript\nvar ast = latin.parse('A simple sentence.');\n```\n\nYields:\n\n```txt\nRootNode[1] (1:1-1:19, 0-18)\n└─ ParagraphNode[1] (1:1-1:19, 0-18)\n   └─ SentenceNode[6] (1:1-1:19, 0-18)\n      ├─ WordNode[1] (1:1-1:2, 0-1)\n      │  └─ TextNode: \"A\" (1:1-1:2, 0-1)\n      ├─ WhiteSpaceNode: \" \" (1:2-1:3, 1-2)\n      ├─ WordNode[1] (1:3-1:9, 2-8)\n      │  └─ TextNode: \"simple\" (1:3-1:9, 2-8)\n      ├─ WhiteSpaceNode: \" \" (1:9-1:10, 8-9)\n      ├─ WordNode[1] (1:10-1:18, 9-17)\n      │  └─ TextNode: \"sentence\" (1:10-1:18, 9-17)\n      └─ PunctuationNode: \".\" (1:18-1:19, 17-18)\n```\n\n## API\n\n### `ParseLatin([options])`\n\nExposes the functionality needed to tokenize natural Latin-script languages\ninto a syntax tree.\n\n**Parameters**:\n\n*   `options` (`Object`, optional)\n\n    *   `position` (`boolean`, default: `true`) - Whether to add positional\n        information to nodes.\n\n#### `ParseLatin#tokenize(value)`\n\nTokenize natural Latin-script language into letter and numbers (words), white\nspace, and everything else (punctuation).\n\n**Parameters**:\n\n*   `value` (`string`) — Value to parse.\n\n**Returns**: [`Array.<NLCSTNode>`][nlcst] — Nodes.\n\n#### `ParseLatin#parse(value)`\n\nTokenize natural Latin-script languages into an [NLCST](https://github.com/wooorm/nlcst)\n[syntax tree](#syntax-tree-format).\n\n**Parameters**:\n\n*   `value` (`string`) — Value to parse.\n\n**Returns**: [`NLCSTNode`][nlcst] — Root node.\n\n## Syntax Tree Format\n\n> Note: The easiest way to see **how parse-latin tokenizes and parses**, is by\n> using the [online parser demo](https://wooorm.github.io/parse-latin), which\n> shows the syntax tree corresponding to the typed text.\n\nBasically, **parse-latin** splits text into white space, word, and punctuation\ntokens. **parse-latin** starts out with a pretty easy definition, one that most\nother tokenizers use:\n\n*   A “word” is one or more letter or number characters;\n*   A “white space” is one or more white space characters;\n*   A “punctuation” is one or more of anything else;\n\nThen, it manipulates and merges those tokens into an [NLCST](https://github.com/wooorm/nlcst)\nsyntax tree, adding sentences and paragraphs where needed.\n\n*   Some punctuation marks are part of the word they occur in, e.g.,\n    `non-profit`, `she’s`, `G.I.`, `11:00`, `N/A`, `&c`, `nineteenth- and...`;\n\n*   Some full-stops do not mark a sentence end, e.g., `1.`, `e.g.`, `id.`;\n\n*   Although full-stops, question marks, and exclamation marks (sometimes) end\n    a sentence, that end might not occur directly after the mark, e.g., `.)`,\n    `.\"`;\n\n*   And many more exceptions.\n\n## Related\n\n*   [nlcst][]\n*   [retext][]\n*   [parse-dutch][]\n*   [parse-english][]\n\n## License\n\n[MIT][license] © [Titus Wormer][home]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/parse-latin.svg\n\n[travis]: https://travis-ci.org/wooorm/parse-latin\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/parse-latin.svg\n\n[coverage]: https://codecov.io/github/wooorm/parse-latin\n\n[npm-install]: https://docs.npmjs.com/cli/install\n\n[duo]: http://duojs.org/#getting-started\n\n[releases]: https://github.com/wooorm/parse-latin/releases\n\n[license]: LICENSE\n\n[home]: http://wooorm.com\n\n[nlcst]: https://github.com/wooorm/nlcst\n\n[retext]: https://github.com/wooorm/retext\n\n[parse-dutch]: https://github.com/wooorm/parse-dutch\n\n[parse-english]: https://github.com/wooorm/parse-english\n",
  "readmeFilename": "readme.md",
  "_id": "parse-latin@3.0.0",
  "dist": {
    "shasum": "9e84d8908e826336557ba2389d749369b89d25db"
  },
  "_from": "parse-latin@^3.0.0",
  "_resolved": "https://registry.npmjs.org/parse-latin/-/parse-latin-3.0.0.tgz"
}
